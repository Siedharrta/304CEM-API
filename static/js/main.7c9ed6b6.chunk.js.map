{"version":3,"sources":["components/watchlistitem.js","components/Nav.js","components/form.js","components/watchListBtn.js","components/movieCatalogue.js","components/mainContent.js","components/loader.js","components/movieDetail.js","App.js","reportWebVitals.js","index.js"],"names":["WatchListItem","watchList","setWatchList","height","className","style","maxHeight","map","listItem","to","movie","id","src","poster_path","alt","title","minValue","maxValue","value","vote_average","text","styles","buildStyles","strokeLinecap","textSize","pathColor","textColor","trailColor","popularity","release_date","onClick","filter","wl","Nav","useState","setHeight","length","Form","setYear","setCategory","movieSearch","setMovieSearch","query","setQuery","API_KEY","a","fetch","response","json","data","results","useEffect","getMoviesByQuery","type","onChange","e","target","overview","substring","WatchListBtn","localStorage","setItem","JSON","stringify","exist","addToWatchList","MovieCatalogue","movies","setMovies","page","setPage","year","allPages","setAllPAges","category","isMounted","useRef","total_pages","fetchMovies","current","fetchMoviesByCategory","pageCount","initialPage","marginPagesDisplayed","pageRangeDisplayed","previousLabel","nextLabel","containerClassName","pageClassName","activeClassName","previousClassName","nextClassName","disabledClassName","breakClassName","onPageChange","selected","MainContent","Loader","MovieDetail","match","genres","setMovie","setMovieTrailer","setMovieVideos","setActors","setSimilarMovies","setUrl","loader","setLoader","params","trailer","video","key","cast","slice","fetchMovieTrailer","fetchActors","fetchSimilarMovies","setTimeout","backgroundImage","backdrop_path","original_title","genre","name","App","getItem","parse","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c9ed6b6.chunk.js","sourcesContent":["import React from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport { Link } from 'react-router-dom';\n\nfunction WatchListItem({ watchList, setWatchList, height }) \n{\n    function deleteFromWatchList(movie) \n    {\n        setWatchList(watchList.filter((wl) => wl.movie.id !== movie.id));\n    }\n\n    return (\n        <div className=\"list\" style={{ maxHeight: `${height}px` }}>\n            {\n                watchList.map((listItem) => (\n                    <div key={listItem.movie.id} className=\"list-container\">\n                        <Link to={`/movie/${listItem.movie.id}`} className=\"list-item\">\n                            <img src={`http://image.tmdb.org/t/p/w200/${listItem.movie.poster_path}`} alt={listItem.movie.title} />\n                            <div className=\"item-detail\">\n                                <CircularProgressbar\n                                    className=\"vote\"\n                                    minValue=\"0\"\n                                    maxValue=\"10\"\n                                    value={listItem.movie.vote_average}\n                                    text={listItem.movie.vote_average === 0 ? \"0\" : listItem.movie.vote_average}\n                                    styles={buildStyles({\n                                        strokeLinecap: 'round',\n                                        textSize: '35px',\n                                        pathColor: 'white',\n                                        textColor: 'white',\n                                        trailColor: '#29323c',\n                                    })}\n                                />\n                                <div className=\"item-text\">\n                                    <span className=\"title\">{listItem.movie.title}</span>\n                                    <span className=\"info\">\n                                        <i className=\"fas fa-fire\"></i>\n                                        <span>{listItem.movie.popularity}</span>\n                                    </span>\n                                    <span className=\"info\">\n                                        <i className=\"fas fa-calendar-day\"></i>\n                                        <span>{listItem.movie.release_date}</span>\n                                    </span>\n                                </div>\n                            </div>\n                        </Link>\n                        <i onClick={() => deleteFromWatchList(listItem.movie)} className=\"fas fa-trash-alt trash\"></i>\n                        <div className=\"line\"></div>\n                    </div>\n                ))\n            }\n        </div>\n    );\n}\n\nexport default WatchListItem;","import React,{useState} from 'react';\nimport WatchListItem from './watchlistitem';\n\nfunction Nav({watchList,setWatchList})\n{\n    const [height,setHeight] = useState(0);\n\n    function toggleHeight()\n    {\n        if(height === 0)\n            setHeight(400);\n        else\n            setHeight(0);\n    }\n\n    return(\n        <div className=\"nav\">\n\n            <div className=\"main-nav\">\n                <div className=\"nav-logo\">\n                    \n                    <span>Film Studio</span>\n                </div>\n                <ul>\n                    <li className=\"watch-list\">\n                        <i onClick={toggleHeight} className=\"fa fa-heart\"></i>\n                        {watchList.length === 0 ? \n                            \"\" \n                            :\n                            <span className=\"watch-list-length\">{watchList.length}</span>\n                        }\n                        <WatchListItem watchList={watchList} setWatchList={setWatchList} height={height}/>\n                    </li>\n                </ul>\n            </div>          \n        </div>\n    );\n}\n\nexport default Nav;","import React,{useState,useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Form({setYear,setCategory}){\n\n    const [movieSearch, setMovieSearch] = useState([]);    \n    const [query, setQuery] = useState(\"\");    \n    const [yearArray,setYearArray] = useState([]);\n    const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\n\n    useEffect( () => {\n        getMoviesByQuery();\n    }, [query]);\n    \n    async function getMoviesByQuery()\n    {\n        if(query.length >= 2){\n            const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`); \n            const data = await response.json();\n            setMovieSearch(data.results);\n        }\n        else\n            setMovieSearch([]);\n    }\n\n    function updateQuery(e)\n    {\n        setQuery(e.target.value);\n    }\n\n    return(\n        <div className=\"search\" >\n            <div className=\"search-bar\">\n                <input type=\"text\" id=\"search\" value={query} onChange={updateQuery}/>\n                <i className=\"fas fa-search\"></i>\n                <div className=\"search-list\">\n                    {\n                        movieSearch.map( movie => (\n                           \n                            <div key={movie.id} className=\"search-item\">\n                                <img src={`http://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\n                               \n                                <div className=\"search-detail\">\n                                    <Link to={`/movie/${movie.id}`}>\n                                    <p className=\"title\">{movie.title}</p>\n                                    </Link>\n                                    <p className=\"overview\">{movie.overview.substring(0,100)}</p> \n                                  \n                                </div>\n                                \n                            </div>                       \n                        ))\n                    }\n                </div>\n            </div>        \n        </div>\n    );\n}\n\nexport default Form;","import React, { useEffect } from 'react';\n\nfunction WatchListBtn({ watchList, setWatchList, movie }) {\n\n  useEffect(() => {\n    function saveWatchListLocal() {\n      localStorage.setItem('watchList', JSON.stringify(watchList));\n    }\n    \n    saveWatchListLocal();\n  }, [watchList]);\n\n  function addToWatchList(movie) {\n    var exist = false;\n\n    if (watchList.length > 0) \n    {\n      watchList.map(listItem => {\n        if (listItem.movie.id === movie.id)\n          return exist = true;\n        else\n          return exist = false;\n      });\n    }\n    else\n      setWatchList([...watchList, { movie }]);\n\n    if (!exist) \n    {\n      setWatchList([...watchList, { movie }]);\n    }\n  }\n\n  return (\n    <div className=\"watchListBtn\">\n      <button onClick={() => addToWatchList(movie)}><i className=\"fa fa-heart\"></i></button>\n    </div>\n  )\n}\n\nexport default WatchListBtn;","import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './form';\nimport Paginate from 'react-paginate';\nimport WatchListBtn from './watchListBtn';\nimport Modal from '@mui/material/Modal';\n\nfunction MovieCatalogue({ watchList, setWatchList }) \n{\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(1);\n    const [year, setYear] = useState(null);\n    const [allPages, setAllPAges] = useState(20);\n    const [category, setCategory] = useState(\"\");\n    const isMounted = useRef(false);\n\n    const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\n\n    useEffect(() => \n    {\n        fetchMovies();\n    }, [page, year]);\n\n    useEffect(() => \n    {\n        if (isMounted.current) {\n            fetchMoviesByCategory();\n        } else {\n            isMounted.current = true;\n        }\n    }, [category]);\n\n    async function fetchMovies() \n    {\n        const response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=${page}&primary_release_year=${year}`);\n        const data = await response.json();\n\n        setMovies(data.results);\n        setAllPAges(data.total_pages);\n    }\n\n    async function fetchMoviesByCategory() \n    {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${category}?api_key=${API_KEY}&page=${page}`);\n        const data = await response.json();\n\n        setMovies(data.results);\n        setAllPAges(data.total_pages);\n    }\n\n    function handlePageChange(page) \n    {\n        setPage(page.selected + 1);\n    }\n\n    return (\n        <div className=\"catalogue\">\n            <Form setYear={setYear} setCategory={setCategory} />\n            <div className=\"catalogue-list\">\n                {movies.map(movie => (\n                    <div key={movie.id} className=\"catalogue-item\" >\n                        <img src={`http://image.tmdb.org/t/p/w200/${movie.poster_path}`}  alt={movie.title} />\n                       \n                        <div className=\"catalogue-item-detail\">\n                        <Link to={`/movie/${movie.id}`}>\n                                <button>Watch now</button>\n                            </Link>\n                        </div>\n                        <div className=\"heart\">\n                            <WatchListBtn watchList={watchList} setWatchList={setWatchList} movie={movie} />\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            <Paginate\n                pageCount={allPages}\n                initialPage={0}\n                marginPagesDisplayed={1}\n                pageRangeDisplayed={2}\n                previousLabel={<i className=\"fas fa-angle-left\"></i>}\n                nextLabel={<i className=\"fas fa-angle-right\"></i>}\n                containerClassName={'paginate-container'}\n                pageClassName={'paginate-item'}\n                activeClassName={'paginate-active-item'}\n                previousClassName={'paginate-previous'}\n                nextClassName={'paginate-next'}\n                disabledClassName={'paginate-disabled'}\n                breakClassName={'paginate-break'}\n                onPageChange={handlePageChange}\n            />\n        </div>\n    );\n}\n\nexport default MovieCatalogue;","import React, { useState, useEffect } from 'react';\nimport MovieCatalogue from './movieCatalogue';\n\n\nfunction MainContent({ watchList, setWatchList }) \n{\n  const [movies, setMovies] = useState([]);\n  const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  async function fetchMovies() \n  {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}`);\n    const data = await response.json();\n    setMovies(data.results);\n  }\n\n  return (\n    <div>\n      <MovieCatalogue watchList={watchList} setWatchList={setWatchList} />\n    </div>\n  );\n}\n\nexport default MainContent;\n","import React from 'react';\n\nfunction Loader() {\n    return (\n        <div className=\"loader\">\n            <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n        </div>\n    )\n}\n\nexport default Loader;","import React, { useState, useEffect } from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport { Link } from 'react-router-dom';\nimport MovieSlider from './movieSlider';\nimport ReactPlayer from 'react-player';\nimport Loader from './loader';\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalTitle,\n  } from '@react-ui-org/react-ui';\n\nfunction MovieDetail({ match }) {\n\n    const [movie, setMovie] = useState({\n        genres: [],\n    });\n    const [movieTrailer, setMovieTrailer] = useState({});\n    const [movieVideos, setMovieVideos] = useState([]);\n    const [actors, setActors] = useState([]);\n    const [similarMovies, setSimilarMovies] = useState([]);\n    const [url, setUrl] = useState(\"\");\n    const [loader, setLoader] = useState(false);\n\n\n    const API_KEY = '443a4596b85914edb9a1a8e80c7456c3';\n\n    useEffect(() => {\n        fetchMovies();\n        fetchMovieTrailer();\n        fetchActors();\n        fetchSimilarMovies();\n\n        //loader\n        setLoader(true);\n        setTimeout(() => {\n            setLoader(false);\n        }, 1000);\n\n    }, [match]);\n\n    async function fetchMovies() {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}?api_key=${API_KEY}`);\n        const data = await response.json();\n\n        setMovie(data);\n    }\n\n    async function fetchMovieTrailer() {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/videos?api_key=${API_KEY}`);\n        const data = await response.json();\n\n        const trailer = data.results.filter((video) => {\n            return video.type === \"Trailer\"\n        });\n\n        setMovieVideos(data.results);\n        setUrl(data.results[0].key);\n        setMovieTrailer(trailer[0]);\n    }\n\n    async function fetchActors() {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/credits?api_key=${API_KEY}`);\n        const data = await response.json();\n\n\n        setActors(data.cast.slice(0, 6));\n    }\n\n    async function fetchSimilarMovies() {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${match.params.id}/similar?api_key=${API_KEY}`);\n        const data = await response.json();\n\n        setSimilarMovies(data.results);\n    }\n\n    function handleUrlUpdate(e) {\n        const active = document.querySelector('.active');\n        if (active) {\n            active.classList.remove('active');\n        }\n        e.target.classList.add(\"active\")\n        setUrl(e.target.getAttribute(\"url\"));\n    }\n\n    return (\n        <>\n            {\n                loader ?\n                    <Loader />\n                    :\n                    <Modal>\n                    <div className=\"movie-detail\">\n                        \n                        <div className=\"movie-detail-actions\">\n                            <Link to=\"/\" className=\"goback\">\n                                <div >\n                                    <i className=\"fas fa-arrow-alt-circle-left\"></i>\n                                </div>\n                            </Link>\n\n                            {/* <CircularProgressbar\n                                className=\"circuralBar\"\n                                minValue=\"0\"\n                                maxValue=\"10\"\n                                value={movie.vote_average}\n                                text={movie.vote_average === 0 ? \"0\" : movie.vote_average}\n                                styles={buildStyles({\n                                    strokeLinecap: 'round',\n                                    textSize: '30px',\n                                    pathColor: 'white',\n                                    textColor: 'white',\n                                    trailColor: '#485563',\n                                })}\n                            /> */}\n                        </div>\n                        <div className=\"movie-detail-cover\" style={{ backgroundImage: `linear-gradient(to right, rgba(6, 11, 40, 0.94) 19.41% , rgba(10, 14, 35, 0.49) 76.65%), url(http://image.tmdb.org/t/p/original/${movie.backdrop_path})` }}>\n\n\n                            <div className=\"detail\">\n\n                                <span className=\"title\">{movie.title}</span>\n                                <span className=\"original-title\">{movie.title === movie.original_title ? \"\" : movie.original_title}</span>\n                                <div className=\"line\"></div>\n                                {/* <span className=\"budget\">\n                                    <i className=\"fas fa-dollar-sign icon\"></i>\n                                    {movie.budget === 0 ? \"Unknown\" : movie.budget}\n                                </span> */}\n                                <span className=\"genres\">\n                                    <i className=\"fas fa-heart icon\"></i>\n                                    {\n                                        movie.genres.map(genre => (\n                                            <span key={genre.id} className=\"genre\">{genre.name}</span>\n                                        ))\n                                    }\n                                </span>\n                                <span className=\"release_date\">{movie.release_date}</span>\n                                <span className=\"overview\">{movie.overview}</span>\n                            </div>\n\n                            {/* <svg className=\"triangle\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\" fill=\"#485563\" >\n                                <polygon points=\"100,0 0,100 100,100\" />\n                            </svg> */}\n                        </div>\n                       \n                        {/* <div className=\"actors-container\">\n                            <h1>Actors</h1>\n                            <div className=\"actors\">\n                                {\n                                    actors.map(actor => (\n                                        <div key={actor.id} className=\"actor\">\n                                            <div className=\"actor-image\" style={{ backgroundImage: `url(http://image.tmdb.org/t/p/w185/${actor.profile_path})` }}></div>\n                                            <div>\n                                                <div className=\"actor-detail\">\n                                                    <span>Original Name</span>\n                                                    <p>{actor.original_name}</p>\n                                                </div>\n                                                <div className=\"actor-detail\">\n                                                    <span>Character Name</span>\n                                                    <p>{actor.character}</p>\n                                                </div>\n                                                <div className=\"actor-detail\">\n                                                    <span>Popularity</span>\n                                                    <p>{actor.popularity}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))\n                                }\n                            </div>\n                        </div> */}\n\n                        {/* <div className=\"player\">\n                            <div className='player-wrapper'>\n                                <ReactPlayer\n                                    className='react-player'\n                                    url={`https://www.youtube.com/watch?v=${url}`}\n                                />\n                                <div className=\"player-btns\">\n                                    {\n                                        movieVideos.map((video, index) => (\n                                            <div key={video.id} url={video.key} className={`player-btn ${index === 0 ? 'active' : ''}`} onClick={(e) => { handleUrlUpdate(e) }}>\n                                                <span>{video.type}</span> - {video.name}\n                                            </div>\n                                        ))\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <MovieSlider movies={similarMovies} title=\"Similar Movies\" /> */}\n                    </div > </Modal>\n                  \n            }\n        </>\n    );\n}\n\nexport default MovieDetail;\n","import React,{useState,useEffect} from 'react';\nimport {BrowserRouter as Router, Switch ,Route} from 'react-router-dom';\nimport './App.css';\nimport Nav from './components/Nav';\nimport MainContent from './components/mainContent';\nimport MovieDetail from './components/movieDetail';\n\nfunction App() {\n\n  const [watchList,setWatchList] = useState([]);\n  \n  useEffect(() => {\n        getWatchListLocal();\n  }, []);\n\n  function getWatchListLocal(){\n      if (localStorage.getItem('watchList') !== null) {\n          setWatchList(JSON.parse(localStorage.getItem('watchList')));\n      }\n  }\n\n  return (\n      <div className=\"App\">\n          <Router>\n          <Nav watchList={watchList} setWatchList={setWatchList} />\n            <Switch>\n              <Route path=\"/movie/:id\" component={MovieDetail} />\n              <MainContent watchList={watchList} setWatchList={setWatchList} />\n            </Switch>\n          </Router>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}